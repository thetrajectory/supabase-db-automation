name: Supabase Automation

on:
  schedule:
    # Daily report at 11:59 PM
    - cron: '0 18 * * *'
    # Weekly backup on Friday at 11:00 AM
    - cron: '0 18 * * 5'
  workflow_dispatch:  # Allow manual triggering

jobs:
  daily_report:
    name: Generate Daily Report
    runs-on: ubuntu-latest
    if: github.event.schedule != '0 18 * * 5'  # Run if not the weekly backup time
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install supabase google-api-python-client google-auth-httplib2 google-auth-oauthlib
          
      - name: Run daily report
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
          GMAIL_USER: ${{ secrets.GMAIL_USER }}
          GMAIL_APP_PASSWORD: ${{ secrets.GMAIL_APP_PASSWORD }}
          REPORT_RECIPIENT: ${{ secrets.REPORT_RECIPIENT }}
        run: python supabase_automation.py
        
  weekly_backup:
    name: Create Weekly Backup
    runs-on: ubuntu-latest
    if: github.event.schedule == '0 18 * * 5'  # Run only on Friday at 11 AM
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install supabase google-api-python-client google-auth-httplib2 google-auth-oauthlib
          
      - name: Run weekly backup
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
          GOOGLE_DRIVE_CREDENTIALS: ${{ secrets.GOOGLE_DRIVE_CREDENTIALS }}
        run: python supabase_automation.py weekly
